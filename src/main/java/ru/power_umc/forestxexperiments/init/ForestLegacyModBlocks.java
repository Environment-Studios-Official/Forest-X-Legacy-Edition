
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package ru.power_umc.forestxexperiments.init;

import ru.power_umc.forestxexperiments.block.WindowBlockBlock;
import ru.power_umc.forestxexperiments.block.UndergroundCrystalBlock;
import ru.power_umc.forestxexperiments.block.SaltOreBlock;
import ru.power_umc.forestxexperiments.block.SaltBlockBlock;
import ru.power_umc.forestxexperiments.block.QuicksandBlock;
import ru.power_umc.forestxexperiments.block.PearWoodBlock;
import ru.power_umc.forestxexperiments.block.PearStairsBlock;
import ru.power_umc.forestxexperiments.block.PearSlabBlock;
import ru.power_umc.forestxexperiments.block.PearSaplingBlock;
import ru.power_umc.forestxexperiments.block.PearPlanksBlock;
import ru.power_umc.forestxexperiments.block.PearLogBlock;
import ru.power_umc.forestxexperiments.block.PearLeavesBlock;
import ru.power_umc.forestxexperiments.block.PearFenceGateBlock;
import ru.power_umc.forestxexperiments.block.PearFenceBlock;
import ru.power_umc.forestxexperiments.block.PeachWoodBlock;
import ru.power_umc.forestxexperiments.block.PeachStairsBlock;
import ru.power_umc.forestxexperiments.block.PeachSlabBlock;
import ru.power_umc.forestxexperiments.block.PeachSaplingBlock;
import ru.power_umc.forestxexperiments.block.PeachPlanksBlock;
import ru.power_umc.forestxexperiments.block.PeachLogBlock;
import ru.power_umc.forestxexperiments.block.PeachLeavesBlock;
import ru.power_umc.forestxexperiments.block.PeachFenceGateBlock;
import ru.power_umc.forestxexperiments.block.PeachFenceBlock;
import ru.power_umc.forestxexperiments.block.LemonWoodBlock;
import ru.power_umc.forestxexperiments.block.LemonStairsBlock;
import ru.power_umc.forestxexperiments.block.LemonSlabBlock;
import ru.power_umc.forestxexperiments.block.LemonSaplingBlock;
import ru.power_umc.forestxexperiments.block.LemonPlanksBlock;
import ru.power_umc.forestxexperiments.block.LemonLogBlock;
import ru.power_umc.forestxexperiments.block.LemonLeavesBlock;
import ru.power_umc.forestxexperiments.block.LemonFenceGateBlock;
import ru.power_umc.forestxexperiments.block.LemonFenceBlock;
import ru.power_umc.forestxexperiments.block.Cranberrybush1Block;
import ru.power_umc.forestxexperiments.block.Cranberrybush0Block;
import ru.power_umc.forestxexperiments.block.CherryWoodBlock;
import ru.power_umc.forestxexperiments.block.CherryStairsBlock;
import ru.power_umc.forestxexperiments.block.CherrySlabBlock;
import ru.power_umc.forestxexperiments.block.CherrySaplingBlock;
import ru.power_umc.forestxexperiments.block.CherryPlanksBlock;
import ru.power_umc.forestxexperiments.block.CherryLogBlock;
import ru.power_umc.forestxexperiments.block.CherryLeavesBlock;
import ru.power_umc.forestxexperiments.block.CherryFenceGateBlock;
import ru.power_umc.forestxexperiments.block.CherryFenceBlock;
import ru.power_umc.forestxexperiments.block.BurnedPressurePlateBlock;
import ru.power_umc.forestxexperiments.block.BurnedPlanksBlock;
import ru.power_umc.forestxexperiments.block.BurnedLogBlock;
import ru.power_umc.forestxexperiments.block.BurnedLeavesBlock;
import ru.power_umc.forestxexperiments.block.Blackberrybush1Block;
import ru.power_umc.forestxexperiments.block.Blackberrybush0Block;
import ru.power_umc.forestxexperiments.block.BlackWindowsBlockBlock;
import ru.power_umc.forestxexperiments.block.AshBlockBlock;
import ru.power_umc.forestxexperiments.ForestLegacyMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

public class ForestLegacyModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, ForestLegacyMod.MODID);
	public static final RegistryObject<Block> CHERRY_WOOD = REGISTRY.register("cherry_wood", () -> new CherryWoodBlock());
	public static final RegistryObject<Block> CHERRY_LOG = REGISTRY.register("cherry_log", () -> new CherryLogBlock());
	public static final RegistryObject<Block> CHERRY_PLANKS = REGISTRY.register("cherry_planks", () -> new CherryPlanksBlock());
	public static final RegistryObject<Block> CHERRY_LEAVES = REGISTRY.register("cherry_leaves", () -> new CherryLeavesBlock());
	public static final RegistryObject<Block> CHERRY_STAIRS = REGISTRY.register("cherry_stairs", () -> new CherryStairsBlock());
	public static final RegistryObject<Block> CHERRY_SLAB = REGISTRY.register("cherry_slab", () -> new CherrySlabBlock());
	public static final RegistryObject<Block> CHERRY_FENCE = REGISTRY.register("cherry_fence", () -> new CherryFenceBlock());
	public static final RegistryObject<Block> CHERRY_FENCE_GATE = REGISTRY.register("cherry_fence_gate", () -> new CherryFenceGateBlock());
	public static final RegistryObject<Block> CHERRY_SAPLING = REGISTRY.register("cherry_sapling", () -> new CherrySaplingBlock());
	public static final RegistryObject<Block> LEMON_LOG = REGISTRY.register("lemon_log", () -> new LemonLogBlock());
	public static final RegistryObject<Block> LEMON_WOOD = REGISTRY.register("lemon_wood", () -> new LemonWoodBlock());
	public static final RegistryObject<Block> LEMON_PLANKS = REGISTRY.register("lemon_planks", () -> new LemonPlanksBlock());
	public static final RegistryObject<Block> LEMON_LEAVES = REGISTRY.register("lemon_leaves", () -> new LemonLeavesBlock());
	public static final RegistryObject<Block> LEMON_STAIRS = REGISTRY.register("lemon_stairs", () -> new LemonStairsBlock());
	public static final RegistryObject<Block> LEMON_SLAB = REGISTRY.register("lemon_slab", () -> new LemonSlabBlock());
	public static final RegistryObject<Block> LEMON_FENCE = REGISTRY.register("lemon_fence", () -> new LemonFenceBlock());
	public static final RegistryObject<Block> LEMON_FENCE_GATE = REGISTRY.register("lemon_fence_gate", () -> new LemonFenceGateBlock());
	public static final RegistryObject<Block> LEMON_SAPLING = REGISTRY.register("lemon_sapling", () -> new LemonSaplingBlock());
	public static final RegistryObject<Block> PEACH_WOOD = REGISTRY.register("peach_wood", () -> new PeachWoodBlock());
	public static final RegistryObject<Block> PEACH_LOG = REGISTRY.register("peach_log", () -> new PeachLogBlock());
	public static final RegistryObject<Block> PEACH_PLANKS = REGISTRY.register("peach_planks", () -> new PeachPlanksBlock());
	public static final RegistryObject<Block> PEACH_LEAVES = REGISTRY.register("peach_leaves", () -> new PeachLeavesBlock());
	public static final RegistryObject<Block> PEACH_STAIRS = REGISTRY.register("peach_stairs", () -> new PeachStairsBlock());
	public static final RegistryObject<Block> PEACH_SLAB = REGISTRY.register("peach_slab", () -> new PeachSlabBlock());
	public static final RegistryObject<Block> PEACH_FENCE = REGISTRY.register("peach_fence", () -> new PeachFenceBlock());
	public static final RegistryObject<Block> PEACH_FENCE_GATE = REGISTRY.register("peach_fence_gate", () -> new PeachFenceGateBlock());
	public static final RegistryObject<Block> PEACH_SAPLING = REGISTRY.register("peach_sapling", () -> new PeachSaplingBlock());
	public static final RegistryObject<Block> PEAR_WOOD = REGISTRY.register("pear_wood", () -> new PearWoodBlock());
	public static final RegistryObject<Block> PEAR_LOG = REGISTRY.register("pear_log", () -> new PearLogBlock());
	public static final RegistryObject<Block> PEAR_PLANKS = REGISTRY.register("pear_planks", () -> new PearPlanksBlock());
	public static final RegistryObject<Block> PEAR_LEAVES = REGISTRY.register("pear_leaves", () -> new PearLeavesBlock());
	public static final RegistryObject<Block> PEAR_STAIRS = REGISTRY.register("pear_stairs", () -> new PearStairsBlock());
	public static final RegistryObject<Block> PEAR_SLAB = REGISTRY.register("pear_slab", () -> new PearSlabBlock());
	public static final RegistryObject<Block> PEAR_FENCE = REGISTRY.register("pear_fence", () -> new PearFenceBlock());
	public static final RegistryObject<Block> PEAR_FENCE_GATE = REGISTRY.register("pear_fence_gate", () -> new PearFenceGateBlock());
	public static final RegistryObject<Block> PEAR_SAPLING = REGISTRY.register("pear_sapling", () -> new PearSaplingBlock());
	public static final RegistryObject<Block> ASH_BLOCK = REGISTRY.register("ash_block", () -> new AshBlockBlock());
	public static final RegistryObject<Block> BURNED_LOG = REGISTRY.register("burned_log", () -> new BurnedLogBlock());
	public static final RegistryObject<Block> BURNED_PLANKS = REGISTRY.register("burned_planks", () -> new BurnedPlanksBlock());
	public static final RegistryObject<Block> BURNED_LEAVES = REGISTRY.register("burned_leaves", () -> new BurnedLeavesBlock());
	public static final RegistryObject<Block> ROCK_SALT = REGISTRY.register("rock_salt", () -> new SaltOreBlock());
	public static final RegistryObject<Block> SALT_BLOCK = REGISTRY.register("salt_block", () -> new SaltBlockBlock());
	public static final RegistryObject<Block> BLACKBERRYBUSH_0 = REGISTRY.register("blackberrybush_0", () -> new Blackberrybush0Block());
	public static final RegistryObject<Block> BLACKBERRYBUSH_1 = REGISTRY.register("blackberrybush_1", () -> new Blackberrybush1Block());
	public static final RegistryObject<Block> CRANBERRYBUSH_0 = REGISTRY.register("cranberrybush_0", () -> new Cranberrybush0Block());
	public static final RegistryObject<Block> CRANBERRYBUSH_1 = REGISTRY.register("cranberrybush_1", () -> new Cranberrybush1Block());
	public static final RegistryObject<Block> QUICKSAND = REGISTRY.register("quicksand", () -> new QuicksandBlock());
	public static final RegistryObject<Block> UNDERGROUND_CRYSTAL = REGISTRY.register("underground_crystal", () -> new UndergroundCrystalBlock());
	public static final RegistryObject<Block> WINDOW_BLOCK = REGISTRY.register("window_block", () -> new WindowBlockBlock());
	public static final RegistryObject<Block> BLACK_WINDOWS_BLOCK = REGISTRY.register("black_windows_block", () -> new BlackWindowsBlockBlock());
	public static final RegistryObject<Block> BURNED_PRESSURE_PLATE = REGISTRY.register("burned_pressure_plate", () -> new BurnedPressurePlateBlock());
}
